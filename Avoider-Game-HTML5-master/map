
###Key Points of the Folder Structure:
  - The root contains an `index.html` file that serves as the entry point to the game.
  - The `JS` directory holds all JavaScript files organized into subdirectories based on functionality:
  - core: Contains the foundational controller functions and handeling of the game operations.
  - logic: Contains the foundational logic of the game, including input.
  - objects: Holds game object definitions, such as `Player`, `Projectile`, `NPC`, and other entities.
  - render: Includes rendering functions and layers that manage the drawing of game objects and UI.
  - utils: Contains utility classes and functions that support various functionalities (like sound management and drawing).
  - The `css` directory contains the stylesheet for styling the game's UI.


Avoider-Game-HTML5/
│
├── index.html                         # Main entry point for the game.
|
├── css/
│   └── style.css                      # Styles for game UI.
|
├── js/
│   ├── core/
│   │   ├── gameConfig.js              # Game configuration settings and constants.
│   │   ├── gameController.js          # Main game logic manager.
│   │   └── gameDefs.js                # Game state and entity definitions.
│   │   
│   ├── logic/
│   │   ├── mainStateLogic.js          # Logic for managing game states.
│   │   └── npcLogic.js                # NPC update logic.
│   │   
│   ├── objects/
│   │   └── gameEntities.js            # Definitions of all game entities.
│   │  
│   ├── render/
│   │   ├── renderUtilities.js         # Handles rendering functions.
│   │   ├── gameObjectsRenderLayer.js  # Handles rendering of game visuals.
│   │   ├── textRenderLayer.js         # Renders text elements.
│   │   └── layer.js                   # Template for rendering layers.
│   │   
│   └── utils/
│       └── gameUtilities.js           # Helper functions and utility classes.
|
├── test/
│   └── index.html
|
└── spec/
    ├── playerSpec.js                  # Unit tests for Player class.
    ├── deviceSpec.js                  # Unit tests for Device class.
    └── gameControllerSpec.js          # Unit tests for Controller class.   

